sapply(iris,sd())
sapply(iris[,1:4],sd())
sapply(iris[,1:4],sd)
sapply(iris[,1:4],sd)
lapply(iris[,1:4],sd)
Test <- "R is great! I love data!"
substr(Test, 6,10)
grep('love', Test)
gsub('great','wonderful',Test)
data(cars)
data(cars)
print(cars, 1:5)
print(cars, 5)
(cars, 5)
(cars 5)
head(cars 5)
head(cars, 5)
head(cars, 5)
cars
head(cars, 5)
sample(1:50)
head(cars, 5)
sample(1:50, 'NY')
head(cars, 5)
state <- rep(c('NY','CA','CT'),50)
head(cars, 5)
state <- rep(c('NY','CA','CT'),50)
state
head(cars, 5)
set.seed(0)
state <- rep(c('NY','CA','CT'),50)
head(cars, 5)
set.seed(0)
state <- rep(c('NY','CA','CT'),50)
cars + state
head(cars, 5)
set.seed(0)
state <- rep(c('NY','CA','CT'),50)
cbind(cars,state)
head(cars, 5)
set.seed(0)
state <- rep(c('NY','CA','CT'),50)
state <- cbind(cars,state)
5000((1+.115)/100)1:15
income = c(4600,12300)
tax = ifelse(income < 5000, income *0.1, income*0.2)
?cat()
for (i in 1:100) {
sum(square(i))
}
for (i in 1:100) {
sum(i^2)
}
for (i in 1:100) {
cat(sum(i^2))
}
for (i in 1:100) {
print(sum(i^2))
}
v <- for (i in 1:100) {
print(sum(i^2))
}
v <- for (i in 1:100) {
cat(c(i^2))
}
sum = 0
for(i in 1:100) {
sum = sum + i^2
}
sum
v = 1:100
sum = 0
for (i in v)
sum = sum + i^2
sum
v = c(2,3,4,5)
for (x in v) {
sum = 0
for (i in 1:x) {
sum = sum + i^2
}
cat(x,sum, '\n')
}
births <- read.csv("births.csv",
stringsAsFactors = FALSE)
births <- read.csv("births.csv",
stringsAsFactors = FALSE)
births <- read.csv("births.csv",stringsAsFactors = FALSE)
births <- read.csv("births.csv")
mass <- c(87,58,65,100)
height <- c(180,165,160,193)
(mass)/(height)^2
5000((1+.115)/100)^1:15
5000((1+.115)/100)^2
5000((1+.115)/100)^2
ratio <- cars[,2]/cars[,1]
ratio <- cars[,2]/cars[,1]
mean(ratio)
ratio <- cars[,2]/cars[,1]
mean(ratio)
sd(ratio)
ts_data = read.csv('https://s3.amazonaws.com/graderdata/TimesSquareSignage.csv', stringsAsFactors=FALSE)
nrow(ts_data)
nrow(ts_data)
count(ts_data)
nrow(ts_data)
ts_data
nrow(ts_data)
summary(ts_data)
class(ts_data)
nrow(ts_data)
count(ts_data[1:])
nrow(ts_data)
count(ts_data[1:100])
nrow(ts_data)
count(ts_data)
nrow(ts_data)
?count
nrow(ts_data)
?count()
nrow(ts_data)
table(ts_data)
nrow(ts_data)
ncol(ts_data)
class(ncol(ts_data))
is.na(ts_data)
nrow(is.na(ts_data))
is.na(nrow(ts_data))
sum(is.na(ts_data))
ncol(is.na(ts_data))
sum(ncol(is.na(ts_data)))
is.na(ts_data[1,])
is.na(c(ts_data))
is.na(ts_data)
is.na(c(ts_data))
sum(is.na(ts_data))
sum(ts_data)
ts_data[is.na(ts_data),]
ts_data[is.na(ts_data),]
ts_data[,is.na(ts_data)]
ts_data[is.na(ts_data),]
ts_data[ ,is.na(ts_data)]
colSums(is.na(ts_data))
rowSums(is.na(ts_data))
5000((1+.115)/100)^c(1:15)
library(readr)
TimesSquareSignage <- read_csv("C:/Users/devin/Desktop/NYCDSA Data Science Bootcamp/05 - Data Analysis with R/02 - Introduction to R Part 1/TimesSquareSignage.csv")
View(TimesSquareSignage)
summary(TimesSquareSignage)
ts_data[ts_data$Location.Description,]
ts_data[,ts_data$Location.Description]
summary(ts_data$Building.Address)
head(ts_data$Building.Address)
head(ts_data$Screen.Name..LED...Vinyl.Signs.)
head(ts_data$SF)
head(ts_data$X_SF)
head(ts_data$TOTAL.SF)
head(ts_data$Location)
ts_data$Location
ts_data$Building.Address
ts_data[ts_data$Location=="Upper Broadway",]
ts_data[,ts_data$Location=="Upper Broadway"]
ts_data$Location
#ts_data[,ts_data$Location=="Upper Broadway"]
#ts_data$Location
ts_data[,ts_data$Location=="Upper Bway"]
#ts_data$Location
ts_data[ts_data$Location=="Upper Bway",]
#ts_data$Location
nrow(ts_data[ts_data$Location=="Upper Bway",])
#ts_data$Location
#'UpperBway.csv' <- ts_data#[ts_data$Location=="Upper Bway",]
ts_data[ts_data=="Upper Bway",]
#ts_data$Location
#UpperBway.csv' <- ts_data#[ts_data$Location=="Upper Bway",]
ts_data[ts_data$Location=="Upper Bway",]
#ts_data$Location
#UpperBway.csv' <- ts_data#[ts_data$Location=="Upper Bway",]
ts_data[ts_data=="Upper Bway",]
#ts_data$Location
'UpperBway.csv' <- ts_data[ts_data$Location=="Upper Bway",]
#ts_data$Location
write.csv(ts_data[ts_data$Location=="Upper Bway",], 'UpperBway.csv')
ts_data$X_SF
ts_data$SF
mean(ts_data$SF)
ts_data[ts_data$SF > mean(ts_data$SF),]
write.csv(ts_data[ts_data$SF > mean(ts_data$SF),], 'SF.csv')
ts_data$Screen.Name..LED...Vinyl.Signs.
ts_data$Location.Description
ts_data$TOTAL
ts_data$TOTAL.SF
ts.data[ts_data$TOTAL.SF > mean(ts_data$TOTAL.SF),]
ts_data[ts_data$TOTAL.SF > mean(ts_data$TOTAL.SF),]
ts_data[order(ts_data$TOTAL.SF),]
ts_data[order(-ts_data$TOTAL.SF),]
ts_data[order(-ts_data$TOTAL.SF),]1:10
ts_data[order(-ts_data$TOTAL.SF),][1:10]
ts_data[order(-ts_data$TOTAL.SF),]
ts_data[order(ts_data$TOTAL.SF),]
ts_data[order(-ts_data$TOTAL.SF),]
ts_data[order(-ts_data$TOTAL.SF),][1:10]
ts_data[order(-ts_data$TOTAL.SF[1:10]),]
ts_data[order(-ts_data$TOTAL.SF),]
ts_data[order(-ts_data$TOTAL.SF),][1:10]
ts_data[order(-ts_data$TOTAL.SF),[1:10]]
ts_data[order(-ts_data$TOTAL.SF),][1:10]
sum(is.na(ts_data))
ts_data[order(-ts_data$TOTAL.SF),][1:10]
ts_data[order(-ts_data$TOTAL.SF),][1:10]
mass <- c(87,58,65,100)
height <- c(180,165,160,193)
round((mass)/(height)^2)
mass <- c(87,58,65,100)
height <- c(180,165,160,193)
round((mass)/(height)^2,2)
mass <- c(87,58,65,100)
height <- c(180,165,160,193)
mass/height^2
5000((1+.115)/100)
5000(1+.115/100)
5000(1+0.115/100)
A <- 5000(1+.115/100)
P <- 5000
r <- .115
P <- 5000
r <- .115
P(1+r/100)
P <- 5000
r <- .115
P*(1+r/100)
P <- 5000
r <- .115
P*(1+r/100)^c(1:15)
P <- 5000
r <- .115
P*(1+(r/100))^c(1:15)
write.csv(ts_data[order(-ts_data$TOTAL.SF),][1:10], 'TopTen.csv')
library(tinytex)
install.packages("latexpdf")
library(latexpdf)
install.packages("latex2exp")
install.packages("tinytex")
detach("package:latexpdf", unload = TRUE)
library(latexpdf)
library(latex2exp)
detach("package:tinytex", unload = TRUE)
library(tinytex)
update.packages(ask = FALSE, checkBuilt = TRUE)
detach("package:tinytex", unload = TRUE)
library(tinytex)
tinytex::tlmgr_update()
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
tinytex::parse_packages()
install.packages("tinytex")
library(tinytex)
library(latexpdf)
library(knitr)
library(rmarkdown)
install.packages("latexpdf")
library(markdown)
library(data.table)
tinytex::install_tinytex()
tinytex:::is_tinytex()
ts_data[order(-ts_data$TOTAL.SF),]c([1:10])
head(ts_data[order(-ts_data$TOTAL.SF),],10)
write.csv(head(ts_data[order(-ts_data$TOTAL.SF),],10), 'TopTen.csv')
head(ts_data[order(-ts_data$TOTAL.SF),],10, 3)
head(ts_data[order(-ts_data$TOTAL.SF),],10)
col(head(ts_data[order(-ts_data$TOTAL.SF),],10),3)
(head(ts_data[order(-ts_data$TOTAL.SF),],10)
head(ts_data[order(-ts_data$TOTAL.SF),],10)
head(ts_data[order(-ts_data$TOTAL.SF),ts_data$Screen.Name..LED...Vinyl.Signs. & ts_data$Building.Address],10)
head(ts_data[order(-ts_data$TOTAL.SF), 2&3],10)
head(ts_data[order(-ts_data$TOTAL.SF), 1:3],10)
write.csv(head(ts_data[order(-ts_data$TOTAL.SF), 1:3],10), 'TopTen.csv')
View(Pet)
head(flights)
library(readr)
flights14 <- read_csv("C:/Users/devin/Desktop/NYCDSA Data Science Bootcamp/05 - Data Analysis with R/06 - Introduction to Shiny/flights1/flights14.csv")
View(flights14)
shiny::runApp('C:/Users/devin/Desktop/NYCDSA Data Science Bootcamp/05 - Data Analysis with R/06 - Introduction to Shiny/flights1')
runApp('C:/Users/devin/Desktop/NYCDSA Data Science Bootcamp/05 - Data Analysis with R/06 - Introduction to Shiny/flights1')
library(data.table)
library(curl)
library(dplyr)
library(DT)
library(ggplot2)
install.packages(c("class", "git2r", "KernSmooth", "MASS", "modelr", "nnet", "pillar", "pkgbuild", "ps", "rlang", "spatial", "tidyr"))
library(data.table)
library(devtools)
library(DT)
library(ggplot2)
library(googleVis)
library(htmltools)
library(htmlwidgets)
library(knitr)
library(leaflet)
library(lubridate)
library(readr)
library(RCurl)
library(rmarkdown)
library(tidyr)
library(tidyverse)
library(shiny)
library(shinydashboard)
setwd("C:/Users/devin/Desktop/NRA Data")
State_spending <- read_csv("C:/Users/devin/Desktop/NRA Data/State_spending.csv")
rownames(State_spending)<- NULL
Party_Spending <- read_csv("Party_Spending.csv")
row.names(Party_Spending) <- NULL
Gun_Deaths_per_capita <- read_csv("C:/Users/devin/Desktop/NRA Data/Gun_Deaths_per_capita.csv")
rownames(Gun_Deaths_per_capita) <-NULL
Master_NRA8 <- read_csv("C:/Users/devin/Desktop/NRA Data/Master_NRA8.csv")
row.names(Master_NRA8) <- NULL
GunLaws<- read_csv("GunLaws.csv")
row.names(GunLaws) <- NULL
Firearm_info <- read_csv("Firearm_info.csv")
rownames(Firearm_info)<- NULL
runApp()
View(Party_Spending)
View(GunLaws)
View(State_spending)
View(Master_NRA8)
as.numeric(as.character((Master_NRA2$NRA.Grand.Total))
Master_NRA2 %>% rename()
Master_NRA2%>%
group_by(state)%>%
summarise(total = sum(NRA.Grand.Total))%>%
arrange(desc(total))%>%
head(30)
Master_NRA2%>%
group_by(state)%>%
summarise(total = sum(NRA.Grand.Total))%>%
arrange((total))%>%
head(10)
Master_NRA2%>%
group_by(Party)%>%
summarise(total = sum(NRA.Grand.Total))%>%
arrange(desc(total))%>%
head(10)
Master_NRA2%>%
filter(Party == 'D')%>%
group_by(Name)%>%
summarise(total = sum(NRA.Grand.Total))%>%
arrange(desc(total))%>%
head(10)
Master_NRA2%>%
filter(Party == 'R')%>%
group_by(Name)%>%
summarise(total = sum(NRA.Grand.Total))%>%
arrange(desc(total))%>%
head(10)
Master_NRA2%>%
select(Name, NRA.Direct.Support,
NRA.Independent.Support,
NRA.Indep.Expend.for.Opponent,
NRA.Indep.Expend.against.opponent,
NRA.Grand.Total,
state)%>%
group_by(Name)
Master_NRA2%>%
group_by(state)%>%
summarise(NRA.Supp = sum(NRA.Direct.Support),
NRA.Indep.Supp = sum(NRA.Independent.Support),
NRA.Indep.Exp.for.Oppo = sum(NRA.Indep.Expend.for.Opponent),
NRA.Indep.Exp.against.oppo = sum(NRA.Indep.Expend.for.Opponent),
NRA.Total = sum(NRA.Grand.Total))
Master_NRA1<-Master_NRA%>%
group_by(state)%>%
summarise(NRA.Direct.Support = sum(NRA.Direct.Support),
NRA.Independent.Support = sum(NRA.Independent.Support),
NRA.Indep.Expend.for.Opponent = sum(NRA.Indep.Expend.for.Opponent),
NRA.Indep.Expend.against.Opponent = sum(NRA.Indep.Expend.for.Opponent),
NRA.Total = sum(NRA.Grand.Total))
State_spending <- Master_NRA2%>%
filter(NRA.Grand.Total >= 0)%>%
group_by(state)%>%
summarise(NRA.Grand.Total.Opposing = sum(NRA.Grand.Total))
test <- full_join(State_spending, State_spending1, by = "state")
test[is.na(test)] <- 0
State_spending <- test
State_spending
write.csv(State_spending, "State_spending.csv", row.names = F)
Master_NRA3<-inner_join(Master_NRA2, State_spending, by = "state")
Gun_Deaths_per_capita <- read_csv("C:/Users/devin/Desktop/NRA Data/Gun_Deaths_per_capita.csv")
Master_NRA3<-inner_join(Master_NRA3, Gun_Deaths_per_capita, by = "state")
write.csv(Master_NRA3, "Master_NRA3.csv", row.names = F)
Master_NRA3 <- read_csv("C:/Users/devin/Desktop/NRA Data/Master_NRA3.csv")
Master_NRA5 <- Master_NRA3%>%select(state,
NRA.Grand.Total.Supporting,
NRA.Grand.Total.Opposing,
`2017 Death Rate (per 100k people)`,
`2017 Total Deaths`,
`2016 Death Rate`,
`2016 Total Deaths`)
write.csv(Master_NRA5, "Master_NRA5.csv", row.names = F)
rm(Master_NRA4)
Master_NRA4 <- read_csv("C:/Users/devin/Desktop/NRA Data/Master_NRA4.csv")
Master_NRA6<-  Master_NRA5%>%
group_by(state)%>%
summarise(NRA.Grand.Total.Supporting = NRA.Grand.Total.Supporting)
test <- Master_NRA2%>%spread(NRA.Grand.Total,state)
Master_NRA6<-inner_join(State_spending,Gun_Deaths_per_capita, by = "state")
?menuItem()
Firearm_Mortality_by_State<- read_csv("C:/Users/devin/Desktop/NRA Data/Firearm Mortality by State (1).csv")
test <- spread(Firearm_Mortality_by_State, YEAR, DEATHS))
Master_NRA9<-Master_NRA3%>%
group_by(state)%>%
select(Name, NRA.Grand.Total, Party)
View(Master_NRA3)
View(Master_NRA9)
write.csv(Master_NRA9, "Master_NRA9.csv", row.names = F)
Master_NRA9 <- read_csv("Master_NRA9.csv")
runApp()
View(Master_NRA9)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = State_spending$NRA.Grand.Total.Supporting, bins = bins)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(State_spending)
runApp()
runApp()
runApp()
library(data.table)
library(shinydashboard)
library(ggplot2)
library(tidyverse)
library(googleVis)
library(readr)
runApp('C:/Users/devin/Downloads')
setwd("C:/Users/devin/Desktop/NRA Data")
State_spending <- read.csv("./data/State_spending.csv", stringsAsFactors = FALSE)
#choice <- colnames(State_spending)[-1]
#
Party_Spending <- read.csv("./data/Party_Spending.csv", stringsAsFactors = FALSE)
# row.names(Party_Spending) <- NULL
#
Gun_Deaths_per_capita <- read.csv("./data/Gun_Deaths_per_capita.csv", stringsAsFactors = FALSE)
runApp('C:/Users/devin/Downloads')
runApp('C:/Users/devin/Downloads')
runApp('C:/Users/devin/Downloads')
getwd()
runApp('C:/Users/devin/Downloads')
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
Party_Spending %>%
group_by(state)%>%
filter(state == input$State1)%>%
ggplot(aes(x = state, y = NRA.total)) +
geom_bar(stat = 'identity', aes(fill = Party), position = "dodge2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?br
?br()
runApp()
runApp()
runApp()
View(GunLaws)
runApp()
install_github("nik01010/dashboardthemes")
library(dashboardthemes)
install.packages("shinyWidgets")
library(shinyWidgets)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(Master_NRA9)
